#include <Ps3Controller.h>

bool gripperSwitch = false;

//Right motor
int enableRightMotor=13; 
int rightMotorPin1=12;
int rightMotorPin2=14;
//Left motor
int enableLeftMotor=27;
int leftMotorPin1=26;
int leftMotorPin2=25;

#define MAX_MOTOR_SPEED 200  //Its value can range from 0-255. 255 is maximum speed.

const int PWMFreq = 1000; /* 1 KHz */
const int PWMResolution = 8;
const int PWMSpeedChannel = 4;


void notify()
{
  int rx =(Ps3.data.analog.stick.rx);  //Base       =>  Right stick - x axis
  int ry =(Ps3.data.analog.stick.ry);  //Shoulder   =>  Right stick  - y axis
  int ly =(Ps3.data.analog.stick.ly);  //Elbow      =>  Left stick  - y axis 
  int lx =(Ps3.data.analog.stick.lx);  //Gripper    =>  Left stick - x axis

  
 

  if (Ps3.data.button.up)             //Move car Forward
  {
    rotateMotor(1, 1);
  }
  else if (Ps3.data.button.down)      //Move car Backward
  {
    rotateMotor(2, 2);
  }
  else if (Ps3.data.button.right)     //Move car Right
  {
    rotateMotor(2, 1);
  }
  else if (Ps3.data.button.left)      //Move car Left
  {
    rotateMotor(1, 2);
  }
  else                                //Stop the car
  {
    rotateMotor(0, 0);
  } 
    
  delay(10);
  
}

void onConnect()
{
  Serial.println("Connected!.");
}

void onDisConnect()
{
  Serial.println("Disconnected!.");    
}

void rotateMotor(int rightMotorSpeed, int leftMotorSpeed)
{
 switch (rightMotorSpeed)
  {
    case 0:
    digitalWrite(rightMotorPin1,LOW);
    digitalWrite(rightMotorPin2,LOW);    
    break;
  
    case 1: 
    digitalWrite(rightMotorPin1,HIGH);
    digitalWrite(rightMotorPin2,LOW);      
    break;
    

    case 2:
    digitalWrite(rightMotorPin1,LOW);
    digitalWrite(rightMotorPin2,HIGH);      
    break;
  }
  
  switch (leftMotorSpeed)
  { 
    case 0:
    digitalWrite(leftMotorPin1,LOW);
    digitalWrite(leftMotorPin2,LOW);    
    break;
    
    case 1:
    digitalWrite(leftMotorPin1,HIGH);
    digitalWrite(leftMotorPin2,LOW);      
    break; 
 
    case 2:
    digitalWrite(leftMotorPin1,LOW);
    digitalWrite(leftMotorPin2,HIGH);
    break;      
  }  

}
void setUpPinModes()
{

  pinMode(enableRightMotor,OUTPUT);
  pinMode(rightMotorPin1,OUTPUT);
  pinMode(rightMotorPin2,OUTPUT);
  
  pinMode(enableLeftMotor,OUTPUT);
  pinMode(leftMotorPin1,OUTPUT);
  pinMode(leftMotorPin2,OUTPUT);

  //Set up PWM for motor speed
  ledcSetup(PWMSpeedChannel, PWMFreq, PWMResolution);
  ledcAttachPin(enableRightMotor, PWMSpeedChannel);
  ledcAttachPin(enableLeftMotor, PWMSpeedChannel);  
  ledcWrite(PWMSpeedChannel, MAX_MOTOR_SPEED);
  
  rotateMotor(0, 0);  
}
  
void setup(){
  setUpPinModes();
  Serial.begin(115200);
  Ps3.attach(notify);
  Ps3.attachOnConnect(onConnect);
  Ps3.attachOnDisconnect(onDisConnect);
  Ps3.begin();
  Serial.println("Ready.");
}
void loop(){

}